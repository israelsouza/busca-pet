tables {
    CREATE TABLE ESTADO (
        EST_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
        EST_SIGLA       CHAR(2)     NOT NULL
    )

    CREATE TABLE CIDADE (
        CID_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
        CID_DESCRICAO   VARCHAR(35) NOT NULL,

        EST_ID          NUMBER,
        FOREIGN KEY (EST_ID) REFERENCES ESTADO(EST_ID)
    )

    CREATE TABLE ENDERECO (
        END_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
        END_RUA         VARCHAR(120) NOT NULL, 
        END_BAIRRO      VARCHAR(120) NOT NULL, 
        END_CEP         CHAR(8) NOT NULL, 

        CID_ID          NUMBER,
        FOREIGN KEY (CID_ID) REFERENCES CIDADE(CID_ID)
    )

    CREATE TABLE PESSOA (
        PES_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
        PES_NOME        VARCHAR(70) NOT NULL,
        PES_PHONE       CHAR(11) NOT NULL,

        CONSTRAINT UK_PES_PHONE UNIQUE (PES_PHONE),

        END_ID          NUMBER,
        FOREIGN KEY (END_ID) REFERENCES ENDERECO(END_ID)
    )


    CREATE TABLE USUARIO (
        USU_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,    
        USU_EMAIL       VARCHAR(70) NOT NULL,
        USU_SENHA       VARCHAR(30) NOT NULL,
        USU_FOTO        BLOB,

        PES_ID          NUMBER,
        FOREIGN KEY (PES_ID) REFERENCES PESSOA(PES_ID),

        CONSTRAINT UK_USU_EMAIL UNIQUE (USU_EMAIL)
    )

    CREATE TABLE RECUPERAR_SENHA(
        REC_TOKEN       VARCHAR2(255) PRIMARY KEY,
        REC_DTLIMITE DATE NOT NULL,
        
        USU_ID          NUMBER,
        FOREIGN KEY (USU_ID) REFERENCES USUARIO(USU_ID)    
    )


    CREATE TABLE PET (
        PET_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY, 
        PET_TIPO        VARCHAR2(25) NOT NULL, 
        PET_DESCRICAO   VARCHAR(150) NOT NULL,
        PET_LOCAL       JSON NOT NULL,
        PET_FOTO        BLOB NOT NULL,
        PET_NOME        VARCHAR(70) NOT NULL,
        PET_RGA         VARCHAR(70),
        PET_DATA        DATE NOT NULL
    )

    CREATE TABLE POST (
        POS_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,               
        POS_TIPO        VARCHAR(15) NOT NULL,    
        POS_DATA        DATE NOT NULL,

        PET_ID          NUMBER,
        FOREIGN KEY (PET_ID) REFERENCES PET(PET_ID),

        USU_ID          NUMBER,
        FOREIGN KEY (USU_ID) REFERENCES USUARIO(USU_ID)
    )

    CREATE TABLE PESSOA (
        PES_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
        PES_NOME        VARCHAR(70) NOT NULL,
        PES_PHONE       CHAR(11) NOT NULL,

        CONSTRAINT UK_PES_PHONE UNIQUE (PES_PHONE)
    )

    CREATE TABLE NOTIFICACOES (
        NOT_ID                  NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,    
        NOT_CONTEUDO            JSON NOT NULL,
        NOT_DATA_CRIACAO        TIMESTAMP DEFAULT CURRENT_TIMESTAMP,

        NOT_DESTINATARIO_ID          NUMBER,
        FOREIGN KEY (NOT_DESTINATARIO_ID) REFERENCES USUARIO(USU_id),
        
        NOT_REMETENTE_ID          NUMBER,
        FOREIGN KEY (NOT_REMETENTE_ID) REFERENCES USUARIO(USU_id)
    )
}

CREATE OR REPLACE FUNCTION DISTANCIA_HAVERSINE_KM (
    p_lat1 NUMBER,
    p_lon1 NUMBER,
    p_lat2 NUMBER,
    p_lon2 NUMBER
) RETURN NUMBER IS
    -- Raio médio da Terra em quilômetros
    V_RAIO_TERRA NUMBER := 6371; -- Em Km

    -- Converter graus para radianos
    V_LAT1_RAD NUMBER := p_lat1 * (ACOS(-1) / 180);
    V_LON1_RAD NUMBER := p_lon1 * (ACOS(-1) / 180);
    V_LAT2_RAD NUMBER := p_lat2 * (ACOS(-1) / 180);
    V_LON2_RAD NUMBER := p_lon2 * (ACOS(-1) / 180);

    -- Diferença das latitudes e longitudes
    V_DELTA_LAT NUMBER := V_LAT2_RAD - V_LAT1_RAD;
    V_DELTA_LON NUMBER := V_LON2_RAD - V_LON1_RAD;

    -- Fórmula de Haversine
    V_A NUMBER := SIN(V_DELTA_LAT / 2) * SIN(V_DELTA_LAT / 2) +
                  COS(V_LAT1_RAD) * COS(V_LAT2_RAD) *
                  SIN(V_DELTA_LON / 2) * SIN(V_DELTA_LON / 2);

    V_C NUMBER := 2 * ATAN2(SQRT(V_A), SQRT(1 - V_A));

    V_DISTANCIA NUMBER := V_RAIO_TERRA * V_C;

BEGIN
    RETURN V_DISTANCIA;
END;






-- inserts estados
(
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('AC');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('AL');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('AP');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('AM');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('BA');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('CE');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('DF');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('ES');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('GO');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('MA');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('MT');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('MS');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('MG');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('PA');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('PB');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('PR');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('PE');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('PI');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('RJ');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('RN');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('RS');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('RO');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('RR');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('SC');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('SP');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('SE');
    INSERT INTO ESTADO (EST_SIGLA) VALUES ('TO');
)

CREATE TABLE DENUNCIAS (
    DEN_ID          NUMBER	GENERATED BY DEFAULT AS IDENTITY        PRIMARY KEY,
    DEN_TIPO        VARCHAR(50) NOT NULL,
    DEN_DESCRICAO   VARCHAR(255) NOT NULL,
    DEN_DATA        DATE NOT NULL,

    USU_ID          NUMBER,
    FOREIGN KEY (USU_ID) REFERENCES USUARIO(USU_ID),

    POS_ID          NUMBER,
    FOREIGN KEY (POS_ID) REFERENCES POST(POS_ID)
);